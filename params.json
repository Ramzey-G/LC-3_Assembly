{"name":"Lc-3 assembly","tagline":"Code form my projects working on the LC3","body":"### Welcome to Ramzey Ghanaim's LC-3 Assembly Page.\r\nThese are my programs writtenin LC-3 Assebly. The LC-3 is a computer (Little Computer 3) that is used for educational purposes to teach students how to program in Assembly. I was introduced to the LC-3 in an Engineering course at UC Santa Cruz.\r\n\r\n\r\n### Running LC-3 Programs\r\nIn order to run these programs the LC-3 Simulator must be used. this simulator is an emulator which emulates the hardware of an LC-3. With this simulator, users are able to run through their program step by step, run through the program as a whole, or run through the program until a break point is reached. The LC-3 simulator can be found [here](http://highered.mheducation.com/sites/0072467509/student_view0/lc-3_simulator.html)\r\n\r\n\r\n### Programming for LC-3\r\nProgramming for the LC-3 is tedious. For me, these programs have enhanced my ability to break down real world problems in simple mathematics.There is a limit of 19 commands (Instructions) which can be seen in the Instruction Set Architecture (ISA) in this repository\r\n\r\n\r\n### LC-3 Commands:\r\nSome commands include;\r\nADD - adds 2 registers together\r\nADD - can be used to add one register and one value (immediate)\r\nTRAP - used only for I/O form the user. See more later\r\n\r\n### LC-3 Architecture:\r\n-RISC (Reduced Instruction Set Computer) architecture (only 19 commands)\r\n-16 Bit data and address (each command uses 16 bits of storage. See how it works in the LC3 ISA png in the repository)\r\n-8 General Purpose Registers (GPR)\r\n-4 special-purpose registers:\r\n  +Program Counter (PC)- points to the address of the next line of code that is to be executed by the Assembler\r\n  +Instructin Register (IR)\r\n  +Condition Code Register(CC)\r\n  +Process Status Register(PSR)\r\n- 16 kb of memory (RAM)\r\n\r\n### LC-3 ISA\r\nIn order to understand the ISA png in the repository one must understand how the oopcode (commands) work with 16 bit data. The first\r\nfour bits contain the instruction's opcode. From here the commands vary. Here are some useful abrivations used for the LC-3 ISA:\r\nDR- Destination Register. This is the register in which the result of this command will be stored in. (Try to think of registers like variables)\r\nSR1 - Source Register 1. This is the register that is being used in the command.\r\nSR2 - Source Register 2. This is the second register that is being usedinthe command. \r\n\tEX: ADD R0, R1, R2 ;//adds contents of register 1 and register 2 and stores it into register 0\r\n\t\t\t    //R1 is SR1, R2 is SR2 and R0 is the DR\r\nPCoffset9- This is used when telling the LC-3 to move the Program Counter (PC) to a specific line of code. This label must be no greater than 9 bits\r\n\r\n### Contact\r\nFeel free to e-mail me at rgnet1@gmail.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}